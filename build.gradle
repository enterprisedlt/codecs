plugins {
    id 'scala'
    id "com.jfrog.bintray" version "1.8.4"
    id "maven-publish"
}

group 'org.enterprisedlt.general'
version '1.0.1-RC2'

compileScala.targetCompatibility = 1.8

dependencies {
    compile 'org.scala-lang:scala-library:2.12.0'
    compile 'org.slf4j:slf4j-api:1.7.25'
    compile('com.google.code.gson:gson:2.7')
    compile('com.google.protobuf:protobuf-java:3.6.1')
    //
    compile 'org.enterprisedlt.general:contract-spec:1.0.2-RC2'

    // testing libraries
    testCompile 'junit:junit:4.12'
    testCompile 'org.scalatest:scalatest_2.12:3.0.5'
}

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
    maven { url 'https://dl.bintray.com/enterprisedlt/general' }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

javadoc.failOnError = false
task javadocJar(type: Jar, dependsOn: [javadoc, scaladoc]) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

publishing {
    publications {
        mavenPublication(MavenPublication) {
            from components.java
            artifact sourcesJar {
                classifier "sources"
            }
            artifact javadocJar {
                classifier "javadoc"
            }
            groupId group
            artifactId rootProject.name
            version version
        }
    }
}

bintray {
    user = System.getProperty('bintray.user')
    key = System.getProperty('bintray.key')
    publications = ['mavenPublication']
    publish = true
    pkg {
        repo = 'general'
        userOrg = 'enterprisedlt'
        name = 'codecs'
        websiteUrl = 'https://github.com/enterprisedlt/codecs'
        vcsUrl = 'https://github.com/enterprisedlt/codecs'
        publicDownloadNumbers = true
        licenses = ['LGPL-3.0']
        githubRepo = 'enterprisedlt/codecs'
        version {
            name = project.version
            desc = project.version
            released  = new Date()
        }
    }
}
